name: .NET Test

on:
  push:
    branches:
    - "develop"
  pull_request:
    branches:
    - "develop"
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read
      checks: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release

    - name: Test
      run: |
        dotnet test -c Release --collect:"XPlat Code Coverage" --logger "junit;LogFilePath=../reports/test-results.xml"

    - name: Generate coverage report
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator -reports:coverage.cobertura.xml -targetdir:coverage-report
    
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: test-results
        path: reports/*.xml
        reporter: java-junit

    - name: Run unit tests with coverage
      run: |
        dotnet test -c Release /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=./coverage/lcov.info
      
    - name: Check coverage percentage
      run: |
        COVERAGE_PERCENTAGE=$(grep -oP 'SF:.*\nDA:\d+,\d+' ./coverage/lcov.info | awk -F',' '{s+=$2} END {print s/NR}')
        echo "Coverage Percentage: $COVERAGE_PERCENTAGE"
        THRESHOLD=90
        if (( $(echo "$COVERAGE_PERCENTAGE < ${{ secrets.COVERAGE_THRESHOLD }}" | bc -l) )); then
          echo "Coverage percentage is below threshold (${{ secrets.COVERAGE_THRESHOLD }}%)."
          exit 1
        fi